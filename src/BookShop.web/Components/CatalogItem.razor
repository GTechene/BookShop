@using BookShop.shared
@using System.Globalization
<div class="card mb-3">
    <div class="row g-0">
        <div class="col-md-4">
            <img
                src="@BookToDisplay.PictureUrl"
                alt="Cover of @BookToDisplay.Title"
                class="img-fluid rounded-start"/>
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h5 class="card-title">@BookToDisplay.Title</h5>
                <p class="card-text">
                    Author:&nbsp;<b>@BookToDisplay.Author</b><br />
                    @BookToDisplay.NumberOfPages pages
                </p>
                
                @if (BookToDisplay.Ratings.NumberOfRatings > 0)
                {
                    <div class="Stars" style="--rating: @BookToDisplay.Ratings.AverageRating.ToString(CultureInfo.InvariantCulture)"></div>
                    <i>(@BookToDisplay.Ratings.NumberOfRatings reviews)</i>
                }
                else
                {
                    <i>No review for this book yet !</i>
                }
                
                @if (BookToDisplay.Quantity == 0)
                {
                    <p class="card-text text-secondary">
                        <i>We're sorry, this article is out of stock</i>
                    </p>
                }
                else if (BookToDisplay.Quantity <= 5)
                {
                    <p class="card-text text-danger">
                        <i>⚠ Only <b>@BookToDisplay.Quantity</b> left in stock ! ⚠</i>
                    </p>
                }
                else
                {
                    <p class="card-text text-secondary">
                        <i>In stock: <b>@BookToDisplay.Quantity</b></i>
                    </p>
                }
                <Price Value="@BookToDisplay.UnitPrice" Class="card-text"/>
                @if (BookToDisplay.Quantity > 0)
                {
                    <button class="btn btn-primary mt-3" disabled="@Disabled" @onclick="@(_ => OnBookAdded.InvokeAsync(BookToDisplay))">Add to Cart ></button>
                }
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public BookResponse BookToDisplay { get; set; } = null!;

    [Parameter]
    public bool CanBeSelected { get; set; }

    private bool Disabled => !CanBeSelected;

    [Parameter]
    public EventCallback<BookResponse> OnBookAdded { get; set; }

}